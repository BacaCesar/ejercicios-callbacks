// El styles lo importamos aqu칤 para que se encargue Vite de compilar todo
import '../scss/styles.scss';

//- Crea una funci칩n que reciba un array de n칰meros y muestre por consola cada n칰mero multiplicado por su 칤ndice en el array

const numbers = [1, 2, 3, 4, 5];

numbers.map((number, index) => console.log(number * index));

//console.log(numbers)

//- Crea una funci칩n que reciba un array de n칰meros y devuelva un array con cada n칰mero dividido por su 칤ndice en el array m치s 2, es decir index + 2

const sumNumberIndex = numbers => {
  numbers.forEach((number, index) => console.log(number / (index + 2)));
};

sumNumberIndex([1, 2, 3, 4, 5]);

//- Crea una funci칩n que reciba un array de palabras y devuelva un array con las mismas palabras en may칰sculas.

const arrayWords = wordsMayus => {
  const result = wordsMayus.map(word => word.toUpperCase());
  console.log(result);
};

arrayWords(['hola', 'adios', 'perro', 'gato']);

// - Crea una funci칩n que reciba un array de palabras y una letra. La funci칩n devolver치 un array con las palabras que comiencen por esa letra, si no hay mostrar치 un mensaje por consola diciendo que ninguna palabra coincide.

const newArrayWords = (words, letter) => {
  const result = words.filter(word => word.startsWith(letter));

  if (result.length === 0) {
    console.log(`Ninguna palabra coincide.`);
  } else {
    console.log(result);
  }
};

newArrayWords(['hola', 'adios', 'perro', 'gato'], 'a');

// - A침ade a la funci칩n anterior lo necesario para que funcione independientemente de mayusculas o min칰sculas.

const newArrayWords2 = (words, letter) => {
  const result = words.filter(word => word.startsWith(letter));

  if (result.length === 0) {
    console.log(`Ninguna palabra coincide.`);
  } else {
    console.log(result);
  }
};

newArrayWords2(['hola', 'adios', 'perro', 'gato'], 'a');

// - Crea una funci칩n que reciba un array de 10 n칰meros e imprima por consola la suma de todos los valores del array.

const arrayAdittion = numbers => {
  const total = numbers.reduce((total, number) => total + number);
  console.log(total);
};

arrayAdittion([1, 2, 3, 4, 5]);

// - Crea una funci칩n que reciba un array de 10 n칰meros, imprime por consola cada n칰mero, su cuadrado y su cubo en este formato:
//   "N칰mero: 2 - Cuadrado: 4 - Cubo: 8".

const arrayOfNumbers = number => {
  const result = number.map(number =>
    console.log(`N칰mero: ${number} - Cuadrado: ${Math.pow(number, 2)} - Cubo: ${Math.pow(number, 3)}`)
  );
};

arrayOfNumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);

// - Crea una funci칩n que reciba una palabra e imprima por consola esa palabra pero con las vocales en may칰scula.

const word = 'ordenador';

const result = word.split('').reduce((acc, letter) => {
  if ('aeiou'.includes(letter)) return acc + letter.toUpperCase();
  else return acc + letter;
}, '');

console.log(result);

// - Crea una funci칩n que reciba un array de 10 n칰meros. Dentro de esa funci칩n crea dos arrays llamados even (pares) y odd (impares), despu칠s multiplica cada uno de los n칰meros del array recibido por un n칰mero aleatorio entre 1 y 10, si el resultado es par, gu치rdalo en el array de pares, si es impar, en el array de impares, al final, imprime los 3 arrays por consola.

const arrayOfTenNumbers = numbers => {
  const randomnumber = Math.ceil(Math.random() * 10);
  const arrayResult = numbers.map(number => {
    return number * randomnumber;
  });
  const evens = arrayResult.filter(number => number % 2 === 0);
  const odds = arrayResult.filter(number => number % 2 !== 0);

  console.log(numbers, evens, odds);
};

arrayOfTenNumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);

// - Crea una funci칩n que reciba un array con 5 palabras, debes imprimir por consola un array que contenga la inicial y la 칰ltima letra de cada palabra en may칰sculas, es decir, si nuestra funci칩n recibiera un array con ['hola', 'adios', 'gato', 'perro', 'casa'] deber치 imprimir por consola ['H', 'A', 'A', 'S', 'G', 'O', 'P','O', 'C', 'A']. Si te quedas atascado puedes investigar la funci칩n flatMap() y flat()

const printFirstAndLastLetter = words => {
  const firstAndLastLetter = words.flatMap(word => {
    return [word.charAt(0).toUpperCase(), word.charAt(word.length - 1).toUpperCase()];
  });
  console.log(firstAndLastLetter);
};
printFirstAndLastLetter(['hola', 'adios', 'gato', 'perro', 'casa']);

// - Crea una funci칩n que reciba un array de 10 n칰meros y te diga si alguno es mayor de 5.

const tenNumbersArray = numbers => {
  const result = numbers.some(number => number >= 5);
  console.log(result);
};

tenNumbersArray([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);

// - Crea una funci칩n que reciba un array de 5 palabras y un n칰mero y te devuelva un array con las palabras que tienen esa longitud, por ejemplo si le envias (['hola', 'adios', 'gato', 'perro', 'casa'], 4), te devolver치 un array con ['hola', 'gato', 'casa']

// - Crea una funci칩n que reciba un array de n칰meros y un n칰mero y te devuelva un array con los n칰meros que sean divisores de ese n칰mero

// - Crea una funci칩n que reciba este array y te devuelva s칩lo los usuarios cuya edad sea menor de 30
const user = [
  { name: 'John', age: 25 },
  { name: 'Jane', age: 30 },
  { name: 'Bob', age: 20 }
];

const undetThirhty = data => {
  const userUnderThirty = data.filter(user => {
    return user.data < 30;
  });

  console.log(users);
};

// - Crea una funci칩n que reciba un array relleno con n칰meros y te diga si todos son pares o no.

// - Crea una funci칩n que reciba un array de 5 palabras y las ordene en base a su longitud, de menor a mayor.

const orderWords = words => {
  const order = words.sort((a, b) => a.length - b.length);
  console.log(order);
};

orderWords(['hola', 'adios', 'perrotes', 'nuercielago', 'dos']);

// - Crea una funci칩n que reciba una palabra e imprima la misma palabra en orden inverso conservando las may칰sculas y las min칰sculas. Si recibe "Mariposas" deber치 imprimir "sasopiraM". No se puede usar reverse() 游땕 (investiga la funci칩n reduceRight)

// ## Retos!!

// - Crea una funci칩n que reciba un array de 5 n칰meros de 2 d칤gitos. La funci칩n debe ser capaz de sumar los digitos de cada n칰mero, es decir si yo le env칤o [21, 34, 87, 10, 28] la funci칩n tendr치 que ser capaz de devolverme un array con [3, 7, 15, 1, 10]

// - Utilizando el array que te dejo a continuaci칩n resuelve estos dos retos.

//   - Crea una funci칩n que reciba un criterio de ordenaci칩n y ordene el array en base a ese criterio. Puede ser el nombre, el apellido o la edad.

//   - Crea una funci칩n que reciba un id de usuario y borre ese usuario del array.

//     const users = [
//     {
//     id: "user001",
//     name: "Juan",
//     surname: "P칠rez",
//     age: 30
//     },
//     {
//     id: "user002",
//     name: "Mar칤a",
//     surname: "Gonz치lez",
//     age: 25
//     },
//     {
//     id: "user003",
//     name: "Pedro",
//     surname: "S치nchez",
//     age: 35
//     },
//     {
//     id: "user004",
//     name: "Ana",
//     surname: "Mart칤nez",
//     age: 28
//     },
//     {
//     id: "user005",
//     name: "Luis",
//     surname: "L칩pez",
//     age: 40
//     }
//     ];

console.log('-----------------APUNTES----------------');
const numbersArray = [1, 2, 3, 4, 5];
const names = ['C칠sar', '츼ngel', 'Laura', 'Carlos', 'Adrian'];

//numbers.sort((a, b) => a.localeCompare(b));

console.log(names);

//->a.localeCompare(b) 칩 b.localeCompare(a)-> solo sirve para Strings
//a-b para numeros o b-a(para ordenarlos al reves)

const numbersArrayB = [1, 2, 3, 4, 5];

const total = numbers.reduce((total, number) => (total += number));
console.log(total);

console.log('-----------------APUNTES----------------');
